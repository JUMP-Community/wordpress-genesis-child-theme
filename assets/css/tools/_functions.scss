//
// Custom functions.
//

// Get a breakpoint's width
//
// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints
//
// @example scss
//  $tablet-width: mq-get-breakpoint-width(tablet);
//  @media (min-width: mq-get-breakpoint-width(desktop)) {}
//
// @requires {Variable} $mq-breakpoints
//
// @returns {Number} Value in pixels
@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {

	@if map-has-key($breakpoints, $name) {

		@return map-get($breakpoints, $name);
	} @else {

		@warn "Breakpoint #{$name} wasn't found in $breakpoints.";
	}
}

@function _contains-falsy($list) {

	@each $item in $list {

		@if not $item {

			@return true;
		}
	}

	@return false;
}

@function _compact-shorthand($values) {
	$output: null;
	$a: nth($values, 1);
	$b: if(length($values) < 2, $a, nth($values, 2));
	$c: if(length($values) < 3, $a, nth($values, 3));
	$d: if(length($values) < 2, $a, nth($values, if(length($values) < 4, 2, 4)));

	@if $a == 0 {
		$a: 0;
	}

	@if $b == 0 {
		$b: 0;
	}

	@if $c == 0 {
		$c: 0;
	}

	@if $d == 0 {
		$d: 0;
	}

	@if $a == $b and $a == $c and $a == $d {
		$output: $a;
	} @else if $a == $c and $b == $d {
		$output: $a $b;
	} @else if $b == $d {
		$output: $a $b $c;
	} @else {
		$output: $a $b $c $d;
	}

	@return $output;
}

@function _is-size($value) {

	@return _is-length($value)
		or _contains("fill" "fit-content" "min-content" "max-content", $value);
}

@function _is-length($value) {

	@return type-of($value) != "null"
		and (
			str-slice($value, 1, 4) == "calc"
			or str-slice($value, 1, 3) == "var"
			or str-slice($value, 1, 3) == "env"
      or index(auto inherit initial 0, $value)
      or (type-of($value) == "number" and not(unitless($value)))
    );
}

@function _unpack-shorthand($shorthand) {

	@if length($shorthand) == 1 {

		@return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);
	} @else if length($shorthand) == 2 {

		@return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);
	} @else if length($shorthand) == 3 {

		@return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);
	} @else {

		@return $shorthand;
	}
}
